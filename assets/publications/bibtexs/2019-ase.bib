@inproceedings{2019-recoules-ase,
author = {Recoules, Fr\'{e}d\'{e}ric and Bardin, S\'{e}bastien and Bonichon, Richard and Mounier, Laurent and Potet, Marie-Laure},
title = {Get Rid of Inline Assembly through Verification-Oriented Lifting},
year = {2019},
isbn = {9781728125084},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ASE.2019.00060},
doi = {10.1109/ASE.2019.00060},
abstract = {Formal methods for software development have made great strides in the last two decades, to the point that their application in safety-critical embedded software is an undeniable success. Their extension to non-critical software is one of the notable forthcoming challenges. For example, C programmers regularly use inline assembly for low-level optimizations and system primitives. This usually results in rendering state-of-the-art formal analyzers developed for C ineffective. We thus propose TInA, the first automated, generic, verification-friendly and trustworthy lifting technique turning inline assembly into semantically equivalent C code amenable to verification, in order to take advantage of existing C analyzers. Extensive experiments on real-world code (including GMP and ffmpeg) show the feasibility and benefits of TInA.},
booktitle = {Proceedings of the 34th IEEE/ACM International Conference on Automated Software Engineering},
pages = {577â€“589},
numpages = {13},
keywords = {formal methods, inline assembly, software verification, lifting},
location = {San Diego, California},
series = {ASE '19}
}
